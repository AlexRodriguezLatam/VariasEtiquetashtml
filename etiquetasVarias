<!DOCTYPE html>
<html>
<head>
<title>Etiquetas de Envío Múltiples</title>
<script src="https://cdn.jsdelivr.net/npm/jsbarcode@3.11.5/dist/JsBarcode.all.min.js"></script>
<style>
  @page {
    size: A4 portrait; /* Cambia a A4 vertical para acomodar varias etiquetas */
    margin: 5mm;
  }
  body {
    font-family: 'Trebuchet MS', 'Arial', sans-serif;
    margin: 0;
    padding: 0;
    display: flex;
    flex-direction: column;
    align-items: center;
    overflow: hidden;
  }
  /* Contenedor para todas las etiquetas */
  .etiquetas-multiples {
    display: flex;
    flex-direction: column;
    align-items: center;
  }
  .contenedor-etiqueta {
    width: 148mm; /* Ancho A6 landscape */
    height: 105mm; /* Altura A6 landscape */
    box-sizing: border-box;
    padding: 5mm;
    display: flex;
    flex-direction: column;
    align-items: center;
    border: 1px solid black;
    margin-bottom: 10mm; /* Espacio entre etiquetas */
    page-break-after: always; /* Salto de página después de cada etiqueta */
  }
  .logo-empresa {
    font-size: 1.2em;
    font-weight: bold;
    margin-bottom: 5mm;
    text-align: center;
    width: 100%;
    padding-bottom: 2mm;
  }
  .section-box {
    width: calc(100% - 2mm);
    margin-bottom: 5mm;
    padding: 3mm;
    text-align: center;
  }
  #barcode-container {
    width: 100%;
    display: flex;
    justify-content: center;
    margin-bottom: 2mm;
  }
  .barcode { /* Usamos una clase en lugar de un ID */
    width: 120mm;
    height: 30mm;
  }
  .barcode-text {
    font-weight: bold;
    word-break: break-all;
    padding-bottom: 2mm;
  }
  .data-table {
    width: 100%;
    border-collapse: collapse;
    font-size: 0.9em;
  }
  .data-table th, .data-table td {
    border: 1px solid black;
    padding: 4mm 2mm;
    text-align: center;
  }
  .data-table th {
    background-color: #858585;
    font-weight: bold;
  }
  @media print {
    body {
      margin: 0;
      padding: 0;
    }
    .contenedor-etiqueta {
      box-shadow: none;
      border: 1px solid black;
    }
    .section-box {
      border: none;
    }
  }
</style>
</head>
<body>

<div class="etiquetas-multiples"></div>

<div id="template-etiqueta" style="display: none;">
  <div class="contenedor-etiqueta">
    <div class="logo-empresa"></div>
    <div class="section-box">
      <div class="barcode-container">
        <svg class="barcode"></svg>
      </div>
      <div class="barcode-text"></div>
    </div>
    <div class="section-box">
      <table class="data-table">
        <thead>
          <tr>
            <th>PCS</th>
            <th>DESTINO</th>
            <th>SKID</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td class="pcs-value"></td>
            <td class="destino-value"></td>
            <td class="skid-value"></td>
          </tr>
        </tbody>
      </table>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const urlParams = new URLSearchParams(window.location.search);
    const dataParam = urlParams.get('data');
    const etiquetasContainer = document.querySelector('.etiquetas-multiples');
    const template = document.getElementById('template-etiqueta').innerHTML;

    if (dataParam) {
      try {
        const etiquetasData = JSON.parse(decodeURIComponent(dataParam));

        etiquetasData.forEach((item, index) => {
          const newEtiqueta = document.createElement('div');
          newEtiqueta.innerHTML = template;

          const empresaElement = newEtiqueta.querySelector('.logo-empresa');
          const barcodeTextElement = newEtiqueta.querySelector('.barcode-text');
          const pcsElement = newEtiqueta.querySelector('.pcs-value');
          const destinoElement = newEtiqueta.querySelector('.destino-value');
          const skidElement = newEtiqueta.querySelector('.skid-value');
          const barcodeSvg = newEtiqueta.querySelector('.barcode');

          empresaElement.innerText = item.empresa || 'E-CARGO TOLEDO';
          barcodeTextElement.innerText = item.sku || 'N/A';
          pcsElement.innerText = item.pcs || 'N/A';
          destinoElement.innerText = item.destino || 'N/A';
          skidElement.innerText = item.skid || 'N/A';
          
          if (item.sku && item.sku !== 'N/A') {
            JsBarcode(barcodeSvg, item.sku, {
              format: "CODE128",
              displayValue: false,
              height: 80,
              width: 1.5,
              margin: 0,
            });
          } else {
            newEtiqueta.querySelector('.barcode-container').style.display = 'none';
          }
          
          etiquetasContainer.appendChild(newEtiqueta);
        });

        // Espera un momento antes de imprimir para asegurar que los elementos estén renderizados
        setTimeout(() => {
          window.print();
        }, 500);

      } catch (e) {
        console.error("Error al parsear los datos JSON:", e);
        // Opcional: mostrar un mensaje de error al usuario
      }
    } else {
      console.error("No se encontraron datos en la URL.");
    }
  });
</script>
</body>
</html>
